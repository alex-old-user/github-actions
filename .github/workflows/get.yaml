name: 'CI'
on: 
  workflow_dispatch:
    inputs:
      releaseTag:
        description: 'release tag'     
        required: true
      makeLatestRelease:
        type: boolean
        description: makeLatestRelease
        required: true


jobs:
  release:
    # if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: get version
        id: version
        run: |
          version=`yq .version charts/aloha/Chart.yaml`
          echo $version
          echo "version=$version" >> "$GITHUB_OUTPUT"
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: set
        id: set
        run: |
          curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/dontbreakit/github-actions/releases/tags/v1.30 | jq .body > body
            echo ###############
            cat body
            echo ###############
            echo "body=`cat body`" >> "$GITHUB_OUTPUT"

      - uses: azure/setup-helm@v3
        with:
          version: 3.11.1
    
      - name: helm package
        run: |
          helm package charts/aloha --app-version=$TAG --version=$TAG --destination .cr-release-packages 
        env:
          TAG: ${{ inputs.releaseTag }}
 


      - uses: helm/chart-releaser-action@v1.5.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_RELEASE_NOTES_FILE: ${{ steps.set.outputs.body }}          
        with:
          skip_packaging: true
          config: cr.yaml
          

      # - name: Release
      #   uses: softprops/action-gh-release@v1
      #   # if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     draft: false
      #     files: test
      #     tag_name: ${{ github.event.inputs.releaseTag }}
      #     generate_release_notes: true
      #     #body: ${{steps.github_release.outputs.changelog}}


